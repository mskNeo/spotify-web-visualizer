{"version":3,"sources":["components/Login.js","components/TrackSearchResult.js","components/Visualizer/Player.js","components/Visualizer/Figure.js","components/Visualizer/Visualizer.js","components/Visualizer/VisualDomain.js","components/Dashboard.js","useAuth.js","App.js","index.js"],"names":["process","REACT_APP_CLIENT_ID","REACT_APP_REDIRECT_URI","scope","AUTH_URL","Login","i","length","Container","className","style","minHeight","href","TrackSearchResult","track","chooseTrack","useState","background","setBackground","cursor","onMouseEnter","onMouseLeave","onClick","src","albumUrl","height","width","alt","title","artist","Player","accessToken","trackUri","setTrackStatus","play","setPlay","useEffect","token","callback","state","isPlaying","uris","styles","Figure","dim","x","y","color","opacity","scaledDim","split","Math","sin","top","left","type","mixBlendMode","Visualizer","trackAnalysis","playing","trackFeatures","setTimings","figures","setFigures","segments","setSegments","index","useRef","maxVol","minVol","weightedShapes","weightedRotations","getDim","max","start","floor","size","abs","window","innerHeight","getWeightedProp","props","table","j","push","random","makeFigure","useCallback","segment","idx","loudness_max","loudness_start","innerWidth","getXPos","pitch","getYPos","pitches","indexOf","shapeClass","rotationClass","fig","classes","confidence","concat","filter","map","loudness","getLoudnessValue","current","figTimeout","setTimeout","console","log","timings","VisualDomain","playingTrack","deselectTrack","setPlaying","cond","uri","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResults","setSearchResults","setPlayingTrack","setTrackAnalysis","setTrackFeatures","getAudioAnalysisForTrack","body","err","error","getAnalysis","getAudioFeaturesForTrack","getFeatures","cancel","searchTracks","tracks","items","smallestAlbumImg","album","images","reduce","smallest","image","artists","name","url","forEach","timing","clearTimeout","Form","Control","placeholder","value","onChange","e","target","overflowY","App","setCode","URLSearchParams","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38af9fb1.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst { REACT_APP_CLIENT_ID, REACT_APP_REDIRECT_URI } = process.env;\n\nconst scope = [\n    'user-read-email',\n    'user-read-private',\n    'user-library-read',\n    'user-read-playback-state'\n];\n\nlet AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${REACT_APP_CLIENT_ID}&response_type=code&redirect_uri=${REACT_APP_REDIRECT_URI}&show_dialog=true&scope=streaming`;\n\nexport default function Login() {\n\n    for (let i = 0; i < scope.length; i++) {\n        AUTH_URL = AUTH_URL + `%20${scope[i]}`;\n    }\n\n    return (\n        <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"100vh\"}}>\n            <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>Login With Spotify</a>\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\n\nexport default function TrackSearchResult({ track, chooseTrack }) {\n    const [ background, setBackground ] = useState('#fff');\n\n    function handlePlay() {\n        chooseTrack(track)\n    }\n\n    return (\n        <div \n            className=\"d-flex m-2 p-2 align-items-center\"\n            style={{ cursor: \"pointer\", background: background }}\n            onMouseEnter={() => setBackground(\"#ccc\")}\n            onMouseLeave={() => setBackground(\"#fff\")}\n            onClick={handlePlay}\n        >\n            <img src={track.albumUrl} style={{ height: '64px', width: '64px' }} alt={`${track.title} album cover`} />\n            <div className=\"px-3\">\n                <div>{track.title}</div>\n                <div className=\"text-muted\">{track.artist}</div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport SpotifyPlayer from 'react-spotify-web-playback'\n\nexport default function Player({ accessToken, trackUri, setTrackStatus }) {\n    const [play, setPlay] = useState(false);\n\n    useEffect(() => {\n        if (trackUri) {\n            setPlay(true);\n        } else {\n            setPlay(false);\n        }\n    }, [trackUri]);\n    \n    if (!accessToken) return null;\n\n    return (\n        <SpotifyPlayer \n            token={accessToken}\n            callback={state => {\n                setTrackStatus(state.isPlaying);\n                if (!state.isPlaying) {\n                    setPlay(false);\n                }\n            }}\n            play={play}\n            uris={trackUri ? [trackUri] : []}\n            styles={{\n                height: 50,\n            }}\n        />\n    )\n}\n","// uses https://random.responsiveimages.io/\nimport React from 'react'\n\nexport default function Figure({ dim, x, y, color, className, scaledDim, opacity }) {\n    const shape = className.split(' ')[0];\n\n    switch(shape) {\n        case 'line':\n            return (\n                <div \n                    className={className}\n                    style={{ \n                            height: `${10}px`,\n                            width: `${dim * 4 *  Math.sin(y / x)}px`,\n                            top: `${y}px`,\n                            left: `${x}px`,\n                            opacity: opacity,\n                            background: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n                            }} >\n                    \n                </div>\n            )\n        case 'image':\n            return (\n                <div \n                    className={className}\n                    style={{ \n                            height: `${dim}px`,\n                            width: `${dim}px`,\n                            top: `${y}px`,\n                            left: `${x}px`,\n                            opacity: opacity,\n                            }} >\n                    <img src={`https://picsum.photos/${dim}.webp`} alt=\"random pic from API\" style={{ height: '100%', width: '100%'}} type=\"image/webp\" />\n                </div>\n            )\n        default:\n            return(\n                <div \n                    className={className}\n                    style={{ \n                            // activate as option\n                            // height: `${Math.random() * (0.99 * dim) + 0.99 * dim}px`, \n                            // width: `${Math.random() * (0.99 * dim) + 0.99 * dim}px`, \n                            height: `${dim}px`, \n                            width: `${dim}px`, \n                            top: `${y}px`,\n                            left: `${x}px`,\n                            opacity: opacity,\n                            background: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n                            mixBlendMode: \"difference\",\n                            }} > \n                </div>\n            )\n    }\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport Figure from './Figure'\nimport '../../styles/Visualizer.css'\n\n// features to select color and shapes\n// analysis to do placements, sizes\n\nexport default function Visualizer({ trackAnalysis, trackFeatures, playing, setTimings }) {\n    const [ figures, setFigures ] = useState([]);\n    const [ segments, setSegments ] = useState([]);\n    const index = useRef(0);\n    const maxVol = useRef(0);\n    const minVol = useRef(100);\n    const weightedShapes = {\"\": 0.4, \"circle\": 0.3, \"line\": 0.1, \"image\": 0.2 };\n    const weightedRotations = {\"\": 0.2, \"deg60\": 0.3, \"deg45\": 0.2, \"deg30\": 0.3 };\n    const maxNumOfFigs = 12; // make this dependent on track features\n\n    // utility functions for making figures;\n    // r1 is domain, r2 is range\n    // function convertRange(value, r1, r2) { \n    //     return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    // }\n    // const volDomain = [minVol.current, maxVol.current];\n    // const volRange = [10, window.innerWidth / 1.6];\n\n    const scale = (size) => (-0.022 * (size - 115.766) ** 2 + 296.933) * window.innerHeight / 100;\n    // const getDim = (loudness) => Math.floor(convertRange(Math.abs(loudness), volDomain, volRange)) + 10;\n    // const getXPos = (idx, dim) => ((window.innerWidth - dim) / maxNumOfFigs) * idx;\n    const getXPos = (dim) => Math.random() * (window.innerWidth - dim);\n    const getYPos = (pitch, dim) => ((window.innerHeight - dim) / 12) * pitch;    // 12 pitches in a scale\n    const getRandomColor = () => [Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255)];  \n    const getDim = (max, start) => Math.floor(scale(Math.abs(max - start))) + 10;\n\n    // get property based on weighted probability\n    const getWeightedProp = (props) => {\n        let table = [];\n        for (let i in props) {\n            // multiply by 10 to get whole numbers\n            for (let j = 0; j < props[i] * 10; j++) {\n                table.push(i);\n            };\n        }\n        return () => table[Math.floor(Math.random() * table.length)];\n    }\n    \n    // make a figure based on random dimensions\n    const makeFigure = useCallback((segment, idx) => {\n        const dim = getDim(segment.loudness_max, segment.loudness_start);\n        const x = getXPos(dim);\n        const y = getYPos(segment.pitches.indexOf(1), dim);\n        const color = getRandomColor();\n        const shapeClass = getWeightedProp(weightedShapes);   // choose what shape to renderat all\n        const rotationClass = getWeightedProp(weightedRotations);  // choose a rotation for figures if at all\n        const classes = `${shapeClass()} ${rotationClass()}`;   // combine all class names to one string\n        const scaledDim = (Math.random() * 1.3 * dim) + (0.7 * dim);    // to scale figures in one dimension and make non-perfect shapes\n        // const scaledDim = dim * segment.loudness_max_time;    // to scale figures in one dimension and make non-perfect shapes\n        const opacity = segment.confidence - 0.1;\n        const fig = { dim, x, y, color, classes, scaledDim, opacity };\n\n        setFigures(figures => {\n            figures[idx] = fig;\n            return [...figures];\n        });\n    }, []);\n\n    // preload some figures in beginning\n    useEffect(() => {\n        for (let i = 0; i < maxNumOfFigs; i++) {\n            setFigures(figures.concat({ \n                dim: 0,\n                x: 0,\n                y: 0,\n                color: [0, 0, 0],\n                classes: '',\n            }));\n        }\n    }, []);\n\n    // load segments and beats when trackAnalysis received\n    useEffect(() => {\n        if (trackAnalysis) {\n            setSegments(trackAnalysis.segments.filter(segment => segment.confidence > 0.2));\n        } \n    }, [trackAnalysis]);\n\n\n    // start visualizer when song is playing, stop when paused\n    useEffect(() => {\n        if (playing) {\n            segments.map(segment => {\n                // get loudness values to create a scale for figure size\n                const loudness = getLoudnessValue(segment);\n                if (loudness > maxVol.current) {\n                    maxVol.current = loudness;\n                }\n                if (loudness < minVol.current) {\n                    minVol.current = loudness;\n                } \n\n                const figTimeout = setTimeout(() => {\n                    index.current = (index.current + 1) % maxNumOfFigs;\n                    makeFigure(segment, index.current);\n                    console.log(segment);\n                }, segment.start * 1000);\n\n                setTimings(timings => {\n                    return [...timings, figTimeout];\n                });\n\n                return () => {\n                    setTimeout(figTimeout);\n                }\n            });\n        } \n    }, [playing]);\n\n    function getLoudnessValue(segment) {\n        return Math.abs(segment.loudness_max - segment.loudness_start);\n    }\n\n    // make key random number to avoid moving around everywhere but it might be interesting\n    return (\n        <div className=\"visualizerSpace\">\n            {figures.map(({ dim, x, y, color, classes, scaledDim, opacity }, index) => (\n                <Figure \n                    key={index}\n                    dim={dim}\n                    x={x}\n                    y={y}\n                    color={color}\n                    scaledDim={scaledDim}\n                    opacity={opacity}\n                    className={classes}\n                />\n            ))}\n        </div>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport Player from './Player'\nimport { ArrowLeft } from 'react-bootstrap-icons';\nimport Visualizer from './Visualizer';\n\nexport default function VisualDomain({ accessToken, playingTrack, trackAnalysis, trackFeatures, deselectTrack, setTimings }) {\n    const [ playing, setPlaying ] = useState(false);\n\n    const setTrackStatus = useCallback((cond) => {\n        setPlaying(cond);\n    }, []);\n\n    if (playingTrack) {\n        return (\n            <div>\n                <ArrowLeft onClick={deselectTrack} style={{ cursor: \"pointer\", width: \"30px\", height: \"30px\" }} />\n                <Visualizer \n                    accessToken={accessToken} \n                    trackUri={playingTrack?.uri} \n                    trackAnalysis={trackAnalysis} \n                    trackFeatures={trackFeatures} \n                    playing={playing}\n                    setTimings={setTimings}  />\n                <Player \n                    accessToken={accessToken} \n                    trackUri={playingTrack?.uri} \n                    setTrackStatus={setTrackStatus} />\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport useAuth from '../useAuth';\nimport TrackSearchResult from './TrackSearchResult';\nimport VisualDomain from './Visualizer/VisualDomain';\nimport '../styles/Dashboard.css';\n\nconst { REACT_APP_CLIENT_ID, } = process.env;\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: REACT_APP_CLIENT_ID,\n});\n\nexport default function Dashboard({ code }) {\n    const accessToken = useAuth(code);\n    const [ search, setSearch ] = useState(\"\");\n    const [ searchResults, setSearchResults ] = useState([]);\n    const [ playingTrack, setPlayingTrack ] = useState();\n    const [ trackAnalysis, setTrackAnalysis ] = useState();\n    const [ trackFeatures, setTrackFeatures ] = useState();\n    const [ timings, setTimings ] = useState([]);\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.setAccessToken(accessToken);\n    }, [accessToken]);\n\n    function getAnalysis(track) {\n        const uri = track.uri.split(\"spotify:track:\")[1];\n        spotifyApi.getAudioAnalysisForTrack(uri)\n            .then((data) => {\n                setTrackAnalysis(data.body);\n            }).catch((err) => {\n                console.error(err);\n            })\n    }\n\n    function getFeatures(track) {\n        const uri = track.uri.split(\"spotify:track:\")[1];\n        spotifyApi.getAudioFeaturesForTrack(uri)\n            .then((data) => {\n                setTrackFeatures(data.body);\n            }).catch((err) => {\n                console.error(err);\n            })\n    }\n\n    function chooseTrack(track) {\n        setPlayingTrack(track);\n        getAnalysis(track);\n        getFeatures(track);\n        setSearch('');\n    }\n\n    function deselectTrack() {\n        setPlayingTrack(null);\n        setTrackAnalysis(null);\n        setTrackFeatures(null);\n        timings.forEach(timing => clearTimeout(timing));\n    }\n\n    useEffect(() => {\n        if (!search) return setSearchResults([]);\n        if (!accessToken) return;\n\n        let cancel = false;\n        spotifyApi.searchTracks(search).then(res => {\n            if (cancel) return;\n\n            setSearchResults(\n                res.body.tracks.items.map(track => {\n                    const smallestAlbumImg = track.album.images.reduce(\n                        (smallest, image) => {\n                            if (image.height < smallest.height) return image;\n                            return smallest;\n                        }, track.album.images[0]);\n\n                    return {\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        uri: track.uri,\n                        albumUrl: smallestAlbumImg.url\n                    }\n                })\n            )\n        })\n\n        return () => cancel = true\n    }, [search, accessToken]);\n\n    return (\n        <div className=\"dashboard\">\n            {playingTrack ? \n                <VisualDomain \n                    accessToken={accessToken} \n                    playingTrack={playingTrack} \n                    trackAnalysis={trackAnalysis} \n                    trackFeatures={trackFeatures} \n                    deselectTrack={deselectTrack} \n                    setTimings={setTimings}\n                    />\n            :\n            <div>\n                <Form.Control \n                    type=\"search\" \n                    placeholder=\"Search Songs/Artists\" \n                    value={search} \n                    onChange={e => setSearch(e.target.value)} />\n                <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n                    {searchResults.map(track => (\n                        <TrackSearchResult \n                            track={track} \n                            key={track.uri} \n                            chooseTrack={chooseTrack}\n                        />\n                    ))}\n                </div>\n            </div>\n            }   \n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nexport default function useAuth(code) {\n    const [ accessToken, setAccessToken ] = useState()\n    const [ refreshToken, setRefreshToken ] = useState()\n    const [ expiresIn, setExpiresIn ] = useState()\n\n    useEffect(() => {\n        axios.post('http://localhost:3001/login', {\n            code,\n        }).then(res => {\n            setAccessToken(res.data.accessToken);\n            setRefreshToken(res.data.refreshToken);\n            setExpiresIn(res.data.expiresIn);\n            window.history.pushState({}, null, '/');\n        }).catch(() => {\n            window.location = '/';\n        });\n    }, [code]);\n\n    useEffect(() => {\n        if(!refreshToken || !expiresIn) return\n\n        // get new access token 1 minute before token expires\n        const interval = setInterval(() => {\n            axios.post('http://localhost:3001/refresh', {\n                refreshToken,\n            }).then(res => {\n                setAccessToken(res.data.accessToken);\n                setExpiresIn(res.data.expiresIn);\n            }).catch(() => {\n                window.location = '/';\n            });\n        }, (expiresIn - 60) * 1000);\n\n        // make sure to clear timeout in case something changes before timeout\n        return () => clearInterval(interval);\n    }, [refreshToken, expiresIn]);\n\n    return accessToken;\n}\n","import React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  const [code, setCode] = useState();\n\n  useEffect(() => {\n    setCode(() => new URLSearchParams(window.location.search).get('code'));\n  }, []);\n\n  return (\n    code ? <Dashboard code={code} /> : <Login />\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}